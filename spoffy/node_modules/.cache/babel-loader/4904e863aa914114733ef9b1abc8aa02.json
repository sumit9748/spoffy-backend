{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    currentUser: null,\n    isFetching: false,\n    error: false\n  },\n  reducers: {\n    loginStart: state => {\n      state.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n    },\n    loginFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["D:/js/resturent/spoffy/src/redux/userRedux.js"],"names":["createSlice","userSlice","name","initialState","currentUser","isFetching","error","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACbC,IAAAA,WAAW,EAAC,IADC;AAEbC,IAAAA,UAAU,EAAC,KAFE;AAGbC,IAAAA,KAAK,EAAC;AAHO,GAFc;AAO5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAEC,KAAD,IAAS;AAChBA,MAAAA,KAAK,CAACJ,UAAN,GAAiB,IAAjB;AACH,KAHO;AAIRK,IAAAA,YAAY,EAAC,CAACD,KAAD,EAAOE,MAAP,KAAgB;AACzBF,MAAAA,KAAK,CAACJ,UAAN,GAAiB,KAAjB;AACAI,MAAAA,KAAK,CAACL,WAAN,GAAkBO,MAAM,CAACC,OAAzB;AACH,KAPO;AAQRC,IAAAA,YAAY,EAAEJ,KAAD,IAAS;AAClBA,MAAAA,KAAK,CAACJ,UAAN,GAAiB,KAAjB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAY,IAAZ;AACH;AAXO;AAPkB,CAAD,CAA7B;AAsBA,OAAO,MAAM;AAAEE,EAAAA,UAAF;AAAaE,EAAAA,YAAb;AAA0BG,EAAAA;AAA1B,IAA2CZ,SAAS,CAACa,OAA3D;AACP,eAAeb,SAAS,CAACc,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n   currentUser:null,\r\n   isFetching:false,\r\n   error:false,\r\n  },\r\n  reducers: {\r\n    loginStart:(state)=>{\r\n        state.isFetching=true\r\n    },\r\n    loginSuccess:(state,action)=>{\r\n        state.isFetching=false\r\n        state.currentUser=action.payload\r\n    },\r\n    loginFailure:(state)=>{\r\n        state.isFetching=false\r\n        state.error=true\r\n    },\r\n  },\r\n});\r\n\r\nexport const { loginStart,loginSuccess,loginFailure } = userSlice.actions;\r\nexport default userSlice.reducer;"]},"metadata":{},"sourceType":"module"}