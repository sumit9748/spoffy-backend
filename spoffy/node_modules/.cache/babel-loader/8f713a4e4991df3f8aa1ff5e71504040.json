{"ast":null,"code":"var _jsxFileName = \"D:\\\\js\\\\resturent\\\\spoffy\\\\src\\\\pages\\\\Cart.jsx\",\n    _s = $RefreshSig$();\n\nimport Remove from \"@mui/icons-material/Remove\";\nimport Add from '@mui/icons-material/Add';\nimport styled from \"styled-components\";\nimport Announcement from \"../components/Announcement\";\nimport Footer from \"../components/Footer\";\nimport Navbar from \"../components/Navbar\";\nimport { mobile } from \"../responsive\";\nimport { useSelector } from \"react-redux\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport { useState, useEffect } from \"react\";\nimport { publicRequest, userRequest } from \"../requestMethod\";\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KEY = process.env.REACT_APP_STRIPE;\nconst Container = styled.div``;\nconst Wrapper = styled.div`\n  padding: 20px;\n  ${mobile({\n  padding: \"10px\"\n})}\n`;\nconst Title = styled.h1`\n  font-weight: 300;\n  text-align: center;\n`;\nconst Top = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px;\n`;\nconst TopButton = styled.button`\n  padding: 10px;\n  font-weight: 600;\n  cursor: pointer;\n  border: ${props => props.type === \"filled\" && \"none\"};\n  background-color: ${props => props.type === \"filled\" ? \"black\" : \"transparent\"};\n  color: ${props => props.type === \"filled\" && \"white\"};\n`;\nconst TopTexts = styled.div`\n  ${mobile({\n  display: \"none\"\n})}\n`;\nconst TopText = styled.span`\n  text-decoration: underline;\n  cursor: pointer;\n  margin: 0px 10px;\n`;\nconst Bottom = styled.div`\n  display: flex;\n  justify-content: space-between;\n  ${mobile({\n  flexDirection: \"column\"\n})}\n`;\nconst Info = styled.div`\n  flex: 3;\n`;\nconst Product = styled.div`\n  display: flex;\n  justify-content: space-between;\n  ${mobile({\n  flexDirection: \"column\"\n})}\n  margin-bottom:10px;\n`;\nconst ProductDetail = styled.div`\n  flex: 2;\n  display: flex;\n`;\nconst Image = styled.img`\n  width: 200px;\n`;\nconst Details = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\nconst ProductName = styled.span``;\nconst ProductId = styled.span``;\nconst ProductColor = styled.div`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background-color: ${props => props.color};\n`;\nconst ProductSize = styled.span``;\nconst PriceDetail = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\nconst ProductAmountContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\nconst ProductAmount = styled.div`\n  font-size: 24px;\n  margin: 5px;\n  ${mobile({\n  margin: \"5px 15px\"\n})}\n`;\nconst ProductPrice = styled.div`\n  font-size: 30px;\n  font-weight: 200;\n  ${mobile({\n  marginBottom: \"20px\"\n})}\n`;\nconst Hr = styled.hr`\n  background-color: #eee;\n  border: none;\n  height: 1px;\n`;\nconst Summary = styled.div`\n  flex: 1;\n  border: 0.5px solid lightgray;\n  border-radius: 10px;\n  padding: 20px;\n  height: 50vh;\n`;\nconst SummaryTitle = styled.h1`\n  font-weight: 200;\n`;\nconst SummaryItem = styled.div`\n  margin: 30px 0px;\n  display: flex;\n  justify-content: space-between;\n  font-weight: ${props => props.type === \"total\" && \"500\"};\n  font-size: ${props => props.type === \"total\" && \"24px\"};\n`;\nconst SummaryItemText = styled.span``;\nconst SummaryItemPrice = styled.span``;\nconst Button = styled.button`\n  width: 100%;\n  padding: 10px;\n  background-color: black;\n  color: white;\n  font-weight: 600;\n`;\nexport const Cart = () => {\n  _s();\n\n  const user = useSelector(state => state.user.currentUser);\n  const history = useHistory();\n  const [stripeToken, setStripeToken] = useState(null);\n\n  const onToken = token => {\n    setStripeToken(token);\n  };\n\n  const cart = useSelector(state => state.food.foods); // var n = cart.products.length;\n\n  console.log(cart); //console.log(stripeToken)\n\n  useEffect(() => {\n    const makeRequest = async () => {\n      try {\n        const res = await userRequest.post(\"/checkout/payment\", {\n          tokenId: stripeToken.id,\n          amount: cart.total * 100\n        });\n        history.push(\"/success\", {\n          data: res.data\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    stripeToken && makeRequest();\n  }, [stripeToken, cart.total, history]);\n\n  const onClick = async () => {\n    try {\n      const newOrder = {\n        userId: user._id,\n        products: cart.products,\n        amount: cart.total,\n        address: user.address ? user.address : \"bankra\"\n      };\n      console.log(newOrder);\n      await publicRequest.post(\"/orders/\", newOrder);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleClick = () => {\n    history.push(\"/products/chicken\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this) // <Container>\n  //   <Navbar />\n  //   <Announcement />\n  //   <Wrapper>\n  //     <Title>YOUR BAG</Title>\n  //     <Top>\n  //       <TopButton onClick={() => handleClick()}>CONTINUE SHOPPING</TopButton>\n  //       <TopTexts>\n  //         <TopText>Shopping Bag({`5`})</TopText>\n  //         <TopText>Your Wishlist (0)</TopText>\n  //       </TopTexts>\n  //       <TopButton type=\"filled\" onClick={onClick}>MY ORDERS</TopButton>\n  //     </Top>\n  //     <Bottom>\n  //       <Info>\n  //         {cart.products.map((product) => (\n  //           <Product>\n  //             <ProductDetail>\n  //               <Image src={product.img} />\n  //               <Details>\n  //                 <ProductName>\n  //                   <b>Product:</b> {product.title}\n  //                 </ProductName>\n  //                 <ProductId>\n  //                   <b>ID:</b> {product._id}\n  //                 </ProductId>\n  //                 <ProductSize>\n  //                   <b>Size:</b> {product.size}\n  //                 </ProductSize>\n  //               </Details>\n  //             </ProductDetail>\n  //             <PriceDetail>\n  //               <ProductAmountContainer>\n  //                 <Add />\n  //                 <ProductAmount>{product.quantity}</ProductAmount>\n  //                 <Remove />\n  //               </ProductAmountContainer>\n  //               <ProductPrice>Rs {product.price * product.quantity}</ProductPrice>\n  //             </PriceDetail>\n  //           </Product>\n  //         ))}\n  //         <Hr />\n  //       </Info>\n  //       <Summary>\n  //         <SummaryTitle>ORDER SUMMARY</SummaryTitle>\n  //         <SummaryItem>\n  //           <SummaryItemText>Subtotal</SummaryItemText>\n  //           <SummaryItemPrice>{cart.total}</SummaryItemPrice>\n  //         </SummaryItem>\n  //         <SummaryItem>\n  //           <SummaryItemText>Estimated Shipping</SummaryItemText>\n  //           <SummaryItemPrice>$ 5.90</SummaryItemPrice>\n  //         </SummaryItem>\n  //         <SummaryItem>\n  //           <SummaryItemText>Shipping Discount</SummaryItemText>\n  //           <SummaryItemPrice>$ -5.90</SummaryItemPrice>\n  //         </SummaryItem>\n  //         <SummaryItem type=\"total\">\n  //           <SummaryItemText>Total</SummaryItemText>\n  //           <SummaryItemPrice>{cart.total}</SummaryItemPrice>\n  //         </SummaryItem>\n  //         <StripeCheckout\n  //           name=\"SPOFFY\"\n  //           billingAddress\n  //           shippingAddress\n  //           description={`your total is rs${cart.total}`}\n  //           amount={cart.total * 100}\n  //           token={onToken}\n  //           stripeKey={KEY}\n  //         >\n  //           <Button>CHECKOUT NOW</Button>\n  //         </StripeCheckout>\n  //       </Summary>\n  //     </Bottom>\n  //   </Wrapper>\n  //   <Footer />\n  // </Container>\n  ;\n};\n\n_s(Cart, \"1r1O4SU2eb19Q3JfuqO2V1ztQW4=\", false, function () {\n  return [useSelector, useHistory, useSelector];\n});\n\n_c = Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["D:/js/resturent/spoffy/src/pages/Cart.jsx"],"names":["Remove","Add","styled","Announcement","Footer","Navbar","mobile","useSelector","StripeCheckout","useState","useEffect","publicRequest","userRequest","useHistory","KEY","process","env","REACT_APP_STRIPE","Container","div","Wrapper","padding","Title","h1","Top","TopButton","button","props","type","TopTexts","display","TopText","span","Bottom","flexDirection","Info","Product","ProductDetail","Image","img","Details","ProductName","ProductId","ProductColor","color","ProductSize","PriceDetail","ProductAmountContainer","ProductAmount","margin","ProductPrice","marginBottom","Hr","hr","Summary","SummaryTitle","SummaryItem","SummaryItemText","SummaryItemPrice","Button","Cart","user","state","currentUser","history","stripeToken","setStripeToken","onToken","token","cart","food","foods","console","log","makeRequest","res","post","tokenId","id","amount","total","push","data","err","onClick","newOrder","userId","_id","products","address","handleClick"],"mappings":"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","sourcesContent":["import Remove from \"@mui/icons-material/Remove\";\r\nimport Add from '@mui/icons-material/Add';\r\nimport styled from \"styled-components\";\r\nimport Announcement from \"../components/Announcement\";\r\nimport Footer from \"../components/Footer\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { mobile } from \"../responsive\";\r\nimport { useSelector } from \"react-redux\";\r\nimport StripeCheckout from \"react-stripe-checkout\"\r\nimport { useState, useEffect } from \"react\";\r\nimport { publicRequest, userRequest } from \"../requestMethod\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst KEY = process.env.REACT_APP_STRIPE;\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 20px;\r\n  ${mobile({ padding: \"10px\" })}\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-weight: 300;\r\n  text-align: center;\r\n`;\r\n\r\nconst Top = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 20px;\r\n`;\r\n\r\nconst TopButton = styled.button`\r\n  padding: 10px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  border: ${(props) => props.type === \"filled\" && \"none\"};\r\n  background-color: ${(props) =>\r\n    props.type === \"filled\" ? \"black\" : \"transparent\"};\r\n  color: ${(props) => props.type === \"filled\" && \"white\"};\r\n`;\r\n\r\nconst TopTexts = styled.div`\r\n  ${mobile({ display: \"none\" })}\r\n`;\r\nconst TopText = styled.span`\r\n  text-decoration: underline;\r\n  cursor: pointer;\r\n  margin: 0px 10px;\r\n`;\r\n\r\nconst Bottom = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  ${mobile({ flexDirection: \"column\" })}\r\n`;\r\n\r\nconst Info = styled.div`\r\n  flex: 3;\r\n`;\r\n\r\nconst Product = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  ${mobile({ flexDirection: \"column\" })}\r\n  margin-bottom:10px;\r\n`;\r\n\r\nconst ProductDetail = styled.div`\r\n  flex: 2;\r\n  display: flex;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 200px;\r\n`;\r\n\r\nconst Details = styled.div`\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst ProductName = styled.span``;\r\n\r\nconst ProductId = styled.span``;\r\n\r\nconst ProductColor = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  background-color: ${(props) => props.color};\r\n`;\r\n\r\nconst ProductSize = styled.span``;\r\n\r\nconst PriceDetail = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ProductAmountContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst ProductAmount = styled.div`\r\n  font-size: 24px;\r\n  margin: 5px;\r\n  ${mobile({ margin: \"5px 15px\" })}\r\n`;\r\n\r\nconst ProductPrice = styled.div`\r\n  font-size: 30px;\r\n  font-weight: 200;\r\n  ${mobile({ marginBottom: \"20px\" })}\r\n`;\r\n\r\nconst Hr = styled.hr`\r\n  background-color: #eee;\r\n  border: none;\r\n  height: 1px;\r\n`;\r\n\r\nconst Summary = styled.div`\r\n  flex: 1;\r\n  border: 0.5px solid lightgray;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  height: 50vh;\r\n`;\r\n\r\nconst SummaryTitle = styled.h1`\r\n  font-weight: 200;\r\n`;\r\n\r\nconst SummaryItem = styled.div`\r\n  margin: 30px 0px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-weight: ${(props) => props.type === \"total\" && \"500\"};\r\n  font-size: ${(props) => props.type === \"total\" && \"24px\"};\r\n`;\r\n\r\nconst SummaryItemText = styled.span``;\r\n\r\nconst SummaryItemPrice = styled.span``;\r\n\r\nconst Button = styled.button`\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: black;\r\n  color: white;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const Cart = () => {\r\n\r\n  const user = useSelector(state => state.user.currentUser)\r\n  const history = useHistory();\r\n  const [stripeToken, setStripeToken] = useState(null)\r\n  const onToken = (token) => {\r\n    setStripeToken(token);\r\n  }\r\n\r\n  const cart = useSelector(state => state.food.foods);\r\n  // var n = cart.products.length;\r\n  console.log(cart)\r\n  //console.log(stripeToken)\r\n  useEffect(() => {\r\n    const makeRequest = async () => {\r\n      try {\r\n        const res = await userRequest.post(\"/checkout/payment\", {\r\n          tokenId: stripeToken.id,\r\n          amount: cart.total * 100,\r\n\r\n        });\r\n\r\n        history.push(\"/success\", { data: res.data });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }; stripeToken && makeRequest();\r\n  }, [stripeToken, cart.total, history]);\r\n\r\n  const onClick = async () => {\r\n    try {\r\n      const newOrder = {\r\n        userId: user._id,\r\n        products: cart.products,\r\n        amount: cart.total,\r\n        address: user.address ? user.address : \"bankra\",\r\n\r\n      }\r\n      console.log(newOrder)\r\n      await publicRequest.post(\"/orders/\", newOrder);\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n  const handleClick = () => {\r\n    history.push(\"/products/chicken\");\r\n  }\r\n\r\n\r\n  return (\r\n    <h1>hi</h1>\r\n    // <Container>\r\n    //   <Navbar />\r\n    //   <Announcement />\r\n    //   <Wrapper>\r\n    //     <Title>YOUR BAG</Title>\r\n    //     <Top>\r\n    //       <TopButton onClick={() => handleClick()}>CONTINUE SHOPPING</TopButton>\r\n    //       <TopTexts>\r\n    //         <TopText>Shopping Bag({`5`})</TopText>\r\n    //         <TopText>Your Wishlist (0)</TopText>\r\n    //       </TopTexts>\r\n    //       <TopButton type=\"filled\" onClick={onClick}>MY ORDERS</TopButton>\r\n    //     </Top>\r\n    //     <Bottom>\r\n    //       <Info>\r\n    //         {cart.products.map((product) => (\r\n    //           <Product>\r\n    //             <ProductDetail>\r\n    //               <Image src={product.img} />\r\n    //               <Details>\r\n    //                 <ProductName>\r\n    //                   <b>Product:</b> {product.title}\r\n    //                 </ProductName>\r\n    //                 <ProductId>\r\n    //                   <b>ID:</b> {product._id}\r\n    //                 </ProductId>\r\n    //                 <ProductSize>\r\n    //                   <b>Size:</b> {product.size}\r\n    //                 </ProductSize>\r\n    //               </Details>\r\n    //             </ProductDetail>\r\n    //             <PriceDetail>\r\n    //               <ProductAmountContainer>\r\n    //                 <Add />\r\n    //                 <ProductAmount>{product.quantity}</ProductAmount>\r\n    //                 <Remove />\r\n    //               </ProductAmountContainer>\r\n    //               <ProductPrice>Rs {product.price * product.quantity}</ProductPrice>\r\n    //             </PriceDetail>\r\n    //           </Product>\r\n\r\n    //         ))}\r\n    //         <Hr />\r\n\r\n    //       </Info>\r\n    //       <Summary>\r\n    //         <SummaryTitle>ORDER SUMMARY</SummaryTitle>\r\n    //         <SummaryItem>\r\n    //           <SummaryItemText>Subtotal</SummaryItemText>\r\n    //           <SummaryItemPrice>{cart.total}</SummaryItemPrice>\r\n    //         </SummaryItem>\r\n    //         <SummaryItem>\r\n    //           <SummaryItemText>Estimated Shipping</SummaryItemText>\r\n    //           <SummaryItemPrice>$ 5.90</SummaryItemPrice>\r\n    //         </SummaryItem>\r\n    //         <SummaryItem>\r\n    //           <SummaryItemText>Shipping Discount</SummaryItemText>\r\n    //           <SummaryItemPrice>$ -5.90</SummaryItemPrice>\r\n    //         </SummaryItem>\r\n    //         <SummaryItem type=\"total\">\r\n    //           <SummaryItemText>Total</SummaryItemText>\r\n    //           <SummaryItemPrice>{cart.total}</SummaryItemPrice>\r\n    //         </SummaryItem>\r\n    //         <StripeCheckout\r\n\r\n    //           name=\"SPOFFY\"\r\n    //           billingAddress\r\n    //           shippingAddress\r\n    //           description={`your total is rs${cart.total}`}\r\n    //           amount={cart.total * 100}\r\n    //           token={onToken}\r\n    //           stripeKey={KEY}\r\n    //         >\r\n    //           <Button>CHECKOUT NOW</Button>\r\n    //         </StripeCheckout>\r\n    //       </Summary>\r\n    //     </Bottom>\r\n    //   </Wrapper>\r\n    //   <Footer />\r\n    // </Container>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}