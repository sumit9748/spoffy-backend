{"ast":null,"code":"import{configureStore,combineReducers}from\"@reduxjs/toolkit\";import cartReducer from\"./cartRedux\";import userReducer from\"./userRedux\";import resturentReducer from\"./resturentRedux\";import foodReducer from\"./foodRedux\";import{persistStore,persistReducer,FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER}from\"redux-persist\";import storage from\"redux-persist/lib/storage\";var persistConfig={key:\"root\",version:1,storage:storage};var rootReducer=combineReducers({user:userReducer,cart:cartReducer,resturent:resturentReducer,food:foodReducer});var persistedReducer=persistReducer(persistConfig,rootReducer);export var store=configureStore({reducer:persistedReducer,middleware:function middleware(getDefaultMiddleware){return getDefaultMiddleware({serializableCheck:{ignoredActions:[FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER]}});}});export var persistor=persistStore(store);","map":{"version":3,"sources":["D:/js/resturent/connect/spoffy/src/redux/store.js"],"names":["configureStore","combineReducers","cartReducer","userReducer","resturentReducer","foodReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","version","rootReducer","user","cart","resturent","food","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA,OAASA,cAAT,CAAyBC,eAAzB,KAAgD,kBAAhD,CACA,MAAOC,CAAAA,WAAP,KAAwB,aAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,aAAxB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kBAA7B,CACA,MAAOC,CAAAA,WAAP,KAAwB,aAAxB,CAEA,OACEC,YADF,CAEEC,cAFF,CAGEC,KAHF,CAIEC,SAJF,CAKEC,KALF,CAMEC,OANF,CAOEC,KAPF,CAQEC,QARF,KASO,eATP,CAUA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CAEA,GAAMC,CAAAA,aAAa,CAAG,CACpBC,GAAG,CAAE,MADe,CAEpBC,OAAO,CAAE,CAFW,CAGpBH,OAAO,CAAPA,OAHoB,CAAtB,CAMA,GAAMI,CAAAA,WAAW,CAAGjB,eAAe,CAAC,CAAEkB,IAAI,CAAEhB,WAAR,CAAqBiB,IAAI,CAAElB,WAA3B,CAAwCmB,SAAS,CAAEjB,gBAAnD,CAAqEkB,IAAI,CAAEjB,WAA3E,CAAD,CAAnC,CAEA,GAAMkB,CAAAA,gBAAgB,CAAGhB,cAAc,CAACQ,aAAD,CAAgBG,WAAhB,CAAvC,CAEA,MAAO,IAAMM,CAAAA,KAAK,CAAGxB,cAAc,CAAC,CAClCyB,OAAO,CAAEF,gBADyB,CAElCG,UAAU,CAAE,oBAACC,oBAAD,QACVA,CAAAA,oBAAoB,CAAC,CACnBC,iBAAiB,CAAE,CACjBC,cAAc,CAAE,CAACrB,KAAD,CAAQC,SAAR,CAAmBC,KAAnB,CAA0BC,OAA1B,CAAmCC,KAAnC,CAA0CC,QAA1C,CADC,CADA,CAAD,CADV,EAFsB,CAAD,CAA5B,CAUP,MAAO,IAAIiB,CAAAA,SAAS,CAAGxB,YAAY,CAACkB,KAAD,CAA5B","sourcesContent":["import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport cartReducer from \"./cartRedux\";\r\nimport userReducer from \"./userRedux\";\r\nimport resturentReducer from \"./resturentRedux\";\r\nimport foodReducer from \"./foodRedux\";\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  version: 1,\r\n  storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({ user: userReducer, cart: cartReducer, resturent: resturentReducer, food: foodReducer });\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport let persistor = persistStore(store);"]},"metadata":{},"sourceType":"module"}