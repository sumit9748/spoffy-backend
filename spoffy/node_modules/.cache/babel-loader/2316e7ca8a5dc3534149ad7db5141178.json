{"ast":null,"code":"var _jsxFileName = \"D:\\\\js\\\\resturent\\\\spoffy\\\\src\\\\pages\\\\register\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./register.css\";\nimport { publicRequest } from \"../../requestMethod\";\nimport FormInput from \"./FormInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Register = () => {\n  _s();\n\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    birthday: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const inputs = [{\n    id: 1,\n    name: \"username\",\n    type: \"text\",\n    placeholder: \"Username\",\n    errorMessage: \"Username should be 3-16 characters and shouldn't include any special character!\",\n    label: \"Username\",\n    pattern: \"^[A-Za-z0-9]{3,16}$\",\n    required: true\n  }, {\n    id: 2,\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Email\",\n    errorMessage: \"It should be a valid email address!\",\n    label: \"Email\",\n    required: true\n  }, {\n    id: 3,\n    name: \"birthday\",\n    type: \"date\",\n    placeholder: \"Birthday\",\n    label: \"Birthday\"\n  }, {\n    id: 4,\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    errorMessage: \"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",\n    label: \"Password\",\n    pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\n    required: true\n  }, {\n    id: 5,\n    name: \"confirmPassword\",\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    errorMessage: \"Passwords don't match!\",\n    label: \"Confirm Password\",\n    pattern: values.password,\n    required: true\n  }];\n\n  const handleClick = async e => {\n    e.preventDefault();\n\n    if (passwordAgain.current.value !== password.current.value) {\n      password.current.setCustomValidity(\"Password dont match!!\");\n    } else {\n      const user = {\n        firstname: firstname.current.value,\n        lastname: lastname.current.value,\n        username: username.current.value,\n        email: email.current.value,\n        password: password.current.value\n      };\n\n      try {\n        console.log(user);\n        await publicRequest.post(\"/auth/register\", user);\n        history.push(\"/login\");\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  const onChange = e => {\n    setValues({ ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"title\",\n        children: \"Create a acoount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: handleClick,\n        children: [inputs.map(input => /*#__PURE__*/_jsxDEV(FormInput, { ...input,\n          value: values[input.name],\n          onChange: onChange\n        }, input.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"agreement\",\n          children: [\"By creating a account,I consent to the processing of my Personal data in accordance with the\", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"PRIVACY POLICY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button\",\n          children: \" Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"kd7RrpYS0caW/4H0ZAp77sMyJzU=\");\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/js/resturent/spoffy/src/pages/register/Register.jsx"],"names":["publicRequest","FormInput","Register","values","setValues","useState","username","email","birthday","password","confirmPassword","inputs","id","name","type","placeholder","errorMessage","label","pattern","required","handleClick","e","preventDefault","passwordAgain","current","value","setCustomValidity","user","firstname","lastname","console","log","post","history","push","err","onChange","target","map","input"],"mappings":"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","sourcesContent":["import \"./register.css\"\r\n\r\nimport { publicRequest } from \"../../requestMethod\";\r\nimport FormInput from \"./FormInput\";\r\n\r\nexport const Register = () => {\r\n\r\n    const [values, setValues] = useState({\r\n        username: \"\",\r\n        email: \"\",\r\n        birthday: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n\r\n    const inputs = [\r\n        {\r\n            id: 1,\r\n            name: \"username\",\r\n            type: \"text\",\r\n            placeholder: \"Username\",\r\n            errorMessage:\r\n                \"Username should be 3-16 characters and shouldn't include any special character!\",\r\n            label: \"Username\",\r\n            pattern: \"^[A-Za-z0-9]{3,16}$\",\r\n            required: true,\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"email\",\r\n            type: \"email\",\r\n            placeholder: \"Email\",\r\n            errorMessage: \"It should be a valid email address!\",\r\n            label: \"Email\",\r\n            required: true,\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"birthday\",\r\n            type: \"date\",\r\n            placeholder: \"Birthday\",\r\n            label: \"Birthday\",\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"password\",\r\n            type: \"password\",\r\n            placeholder: \"Password\",\r\n            errorMessage:\r\n                \"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",\r\n            label: \"Password\",\r\n            pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\r\n            required: true,\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"confirmPassword\",\r\n            type: \"password\",\r\n            placeholder: \"Confirm Password\",\r\n            errorMessage: \"Passwords don't match!\",\r\n            label: \"Confirm Password\",\r\n            pattern: values.password,\r\n            required: true,\r\n        },\r\n    ];\r\n\r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n        if (passwordAgain.current.value !== password.current.value) {\r\n            password.current.setCustomValidity(\"Password dont match!!\");\r\n        } else {\r\n            const user = {\r\n                firstname: firstname.current.value,\r\n                lastname: lastname.current.value,\r\n                username: username.current.value,\r\n                email: email.current.value,\r\n                password: password.current.value,\r\n            }\r\n            try {\r\n                console.log(user);\r\n                await publicRequest.post(\"/auth/register\", user);\r\n                history.push(\"/login\");\r\n\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    };\r\n    const onChange = (e) => {\r\n        setValues({ ...values, [e.target.name]: e.target.value });\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"wrapper\">\r\n                <span className=\"title\">Create a acoount</span>\r\n                <form className=\"form\" onSubmit={handleClick}>\r\n                    {inputs.map((input) => (\r\n                        <FormInput\r\n                            key={input.id}\r\n                            {...input}\r\n                            value={values[input.name]}\r\n                            onChange={onChange}\r\n                        />\r\n                    ))}\r\n\r\n                    <span className=\"agreement\">By creating a account,I consent to the processing of my Personal data in accordance\r\n                        with the<b>PRIVACY POLICY</b>\r\n                    </span>\r\n                    <button type=\"submit\" className=\"button\"> Create</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}