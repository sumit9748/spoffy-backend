{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport cartReducer from \"./cartRedux\";\nimport userReducer from \"./userRedux\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport { persistConfig } from \"redux-persist/es/types\"; //const rootReducer = combineReducers({ user: userReducer, cart: cartReducer });\n\nconst persistedReducer = persistReducer(persistConfig, userReducer);\nexport const store = () => configureStore({\n  reducer: {\n    cart: cartReducer,\n    user: persistedReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["D:/js/resturent/spoffy/src/redux/store.js"],"names":["configureStore","combineReducers","cartReducer","userReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","persistedReducer","store","reducer","cart","user","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAUA,SAASC,aAAT,QAA6B,wBAA7B,C,CAIA;;AAEA,MAAMC,gBAAgB,GAAGR,cAAc,CAAEO,aAAF,EAAiBT,WAAjB,CAAvC;AAEA,OAAO,MAAMW,KAAK,GAAE,MAAKd,cAAc,CAAC;AACxCe,EAAAA,OAAO,EAAC;AACNC,IAAAA,IAAI,EAACd,WADC;AAENe,IAAAA,IAAI,EAACJ;AAFC,GADgC;AAKtCK,EAAAA,UAAU,EAAGC,oBAAD,IACVA,oBAAoB,CAAC;AACnBC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,cAAc,EAAE,CAACf,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADA,GAAD;AANgB,CAAD,CAAhC;AAaP,OAAO,MAAMW,SAAS,GAAGlB,YAAY,CAACU,KAAD,CAA9B","sourcesContent":["import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport cartReducer from \"./cartRedux\";\r\nimport userReducer from \"./userRedux\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport  {persistConfig} from \"redux-persist/es/types\";\r\n\r\n\r\n\r\n//const rootReducer = combineReducers({ user: userReducer, cart: cartReducer });\r\n\r\nconst persistedReducer = persistReducer( persistConfig, userReducer);\r\n\r\nexport const store =()=> configureStore({\r\nreducer:{\r\n  cart:cartReducer,\r\n  user:persistedReducer,\r\n},\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);"]},"metadata":{},"sourceType":"module"}