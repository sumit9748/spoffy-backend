{"ast":null,"code":"var _jsxFileName = \"D:\\\\js\\\\resturent\\\\spoffy\\\\src\\\\components\\\\AllProduct.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { popularProducts } from \"../data\";\nimport Product from \"./Product\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n_c = Container;\n\nconst Products = _ref => {\n  _s();\n\n  let {\n    cat,\n    filters,\n    sort\n  } = _ref;\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const res = await axios.get(cat ? `http://localhost:5000/connect/products?category=${cat}` : \"http://localhost:5000/connect/products\");\n        setProducts(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getProducts();\n  }, [cat]); //console.log(products)\n\n  useEffect(() => {\n    cat && setFilteredProducts(products.filter(product => product.type == filters));\n  }, [products, cat, filters]); //console.log(filteredProducts)\n\n  useEffect(() => {\n    if (sort === \"popular\") {\n      setFilteredProducts(prev => [...prev].sort((a, b) => a.createdAt - b.createdAt));\n    } else if (sort === \"aesc\") {\n      setFilteredProducts(prev => [...prev].sort((a, b) => a.price - b.price));\n    } else {\n      setFilteredProducts(prev => [...prev].sort((a, b) => b.price - a.price));\n    }\n  }, [sort]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: filteredProducts.map(item => /*#__PURE__*/_jsxDEV(Product, {\n      item: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 41\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Products, \"K1gQB4m1/iw3k3jmt5rFCbNdg2E=\");\n\n_c2 = Products;\nexport default Products;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Products\");","map":{"version":3,"sources":["D:/js/resturent/spoffy/src/components/AllProduct.jsx"],"names":["useEffect","useState","styled","popularProducts","Product","axios","Container","div","Products","cat","filters","sort","products","setProducts","filteredProducts","setFilteredProducts","getProducts","res","get","data","err","console","log","filter","product","type","prev","a","b","createdAt","price","map","item","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAI;AAC7B;AACA;AACA;AACA;AACA,CALA;KAAMD,S;;AAON,MAAME,QAAQ,GAAG,QAA4B;AAAA;;AAAA,MAA3B;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,GAA2B;AAC3C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,gBAAD,EAAmBC,mBAAnB,IAA0Cd,QAAQ,CAAC,EAAD,CAAxD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAChBT,GAAG,GACE,mDAAkDA,GAAI,EADxD,GAEC,wCAHY,CAAlB;AAKAI,QAAAA,WAAW,CAACI,GAAG,CAACE,IAAL,CAAX;AACD,OAPD,CAOE,OAAOC,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,KAXD;;AAYAJ,IAAAA,WAAW;AACZ,GAdQ,EAcN,CAACP,GAAD,CAdM,CAAT,CAJ2C,CAmB7C;;AAEET,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,GAAG,IACDM,mBAAmB,CACnBH,QAAQ,CAACW,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACC,IAAR,IAAgBf,OAA3C,CADmB,CADrB;AAID,GALQ,EAKN,CAACE,QAAD,EAAWH,GAAX,EAAgBC,OAAhB,CALM,CAAT,CArB2C,CA4B3C;;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,IAAI,KAAK,SAAb,EAAwB;AACtBI,MAAAA,mBAAmB,CAAEW,IAAD,IAClB,CAAC,GAAGA,IAAJ,EAAUf,IAAV,CAAe,CAACgB,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,SAAF,GAAcD,CAAC,CAACC,SAAzC,CADiB,CAAnB;AAGD,KAJD,MAIO,IAAIlB,IAAI,KAAK,MAAb,EAAqB;AAC1BI,MAAAA,mBAAmB,CAAEW,IAAD,IAClB,CAAC,GAAGA,IAAJ,EAAUf,IAAV,CAAe,CAACgB,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACG,KAAF,GAAUF,CAAC,CAACE,KAArC,CADiB,CAAnB;AAGD,KAJM,MAIA;AACLf,MAAAA,mBAAmB,CAAEW,IAAD,IAClB,CAAC,GAAGA,IAAJ,EAAUf,IAAV,CAAe,CAACgB,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACE,KAAF,GAAUH,CAAC,CAACG,KAArC,CADiB,CAAnB;AAGD;AACF,GAdQ,EAcN,CAACnB,IAAD,CAdM,CAAT;AAgBA,sBACE,QAAC,SAAD;AAAA,cACKG,gBAAgB,CAACiB,GAAjB,CAAsBC,IAAD,iBAAU,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEA;AAAf,OAA0BA,IAAI,CAACC,EAA/B;AAAA;AAAA;AAAA;AAAA,YAA/B;AADL;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAnDD;;GAAMzB,Q;;MAAAA,Q;AAqDN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { popularProducts } from \"../data\";\r\nimport Product from \"./Product\";\r\nimport axios from \"axios\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Products = ({ cat, filters, sort }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getProducts = async () => {\r\n      try {\r\n        const res = await axios.get(\r\n          cat\r\n            ? `http://localhost:5000/connect/products?category=${cat}`\r\n            : \"http://localhost:5000/connect/products\"\r\n        );\r\n        setProducts(res.data);\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    };\r\n    getProducts();\r\n  }, [cat]);\r\n//console.log(products)\r\n\r\n  useEffect(() => {\r\n    cat &&\r\n      setFilteredProducts(\r\n      products.filter(product => product.type == filters),\r\n      );\r\n  }, [products, cat, filters]);\r\n\r\n  //console.log(filteredProducts)\r\n\r\n  useEffect(() => {\r\n    if (sort === \"popular\") {\r\n      setFilteredProducts((prev) =>\r\n        [...prev].sort((a, b) => a.createdAt - b.createdAt)\r\n      );\r\n    } else if (sort === \"aesc\") {\r\n      setFilteredProducts((prev) =>\r\n        [...prev].sort((a, b) => a.price - b.price)\r\n      );\r\n    } else {\r\n      setFilteredProducts((prev) =>\r\n        [...prev].sort((a, b) => b.price - a.price)\r\n      );\r\n    }\r\n  }, [sort]);\r\n\r\n  return (\r\n    <Container>\r\n        {filteredProducts.map((item) => <Product item={item} key={item.id} />)}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Products;"]},"metadata":{},"sourceType":"module"}