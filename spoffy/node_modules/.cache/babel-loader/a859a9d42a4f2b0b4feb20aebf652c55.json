{"ast":null,"code":"import _defineProperty from\"D:/js/resturent/connect/spoffy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:/js/resturent/connect/spoffy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"D:/js/resturent/connect/spoffy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/js/resturent/connect/spoffy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/js/resturent/connect/spoffy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"./register.css\";import{useState}from\"react\";import{useHistory}from\"react-router-dom\";import{publicRequest}from\"../../requestMethod\";import FormInput from\"./FormInput\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Register=function Register(){var history=useHistory();var _useState=useState({username:\"\",email:\"\",birthday:\"\",password:\"\",confirmPassword:\"\"}),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var inputs=[{id:1,name:\"username\",type:\"text\",placeholder:\"Username\",errorMessage:\"Username should be 3-16 characters and shouldn't include any special character!\",label:\"Username\",pattern:\"^[A-Za-z0-9]{3,16}$\",required:true},{id:2,name:\"email\",type:\"email\",placeholder:\"Email\",errorMessage:\"It should be a valid email address!\",label:\"Email\",required:true},{id:3,name:\"birthday\",type:\"date\",placeholder:\"Birthday\",label:\"Birthday\"},{id:4,name:\"password\",type:\"password\",placeholder:\"Password\",errorMessage:\"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",label:\"Password\",pattern:\"^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$\",required:true},{id:5,name:\"confirmPassword\",type:\"password\",placeholder:\"Confirm Password\",errorMessage:\"Passwords don't match!\",label:\"Confirm Password\",pattern:values.password,required:true}];var handleClick=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_context.prev=1;console.log(values);_context.next=5;return publicRequest.post(\"/auth/register\",values);case 5:history.push(\"/login\");_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);console.log(_context.t0);case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function handleClick(_x){return _ref.apply(this,arguments);};}();var onChange=function onChange(e){setValues(_objectSpread(_objectSpread({},values),{},_defineProperty({},e.target.name,e.target.value)));};return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"wrapper\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"title\",children:\"Create a acoount\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:handleClick,children:[/*#__PURE__*/_jsx(\"div\",{className:\"inputs\",children:inputs.map(function(input){return/*#__PURE__*/_jsx(FormInput,_objectSpread(_objectSpread({},input),{},{value:values[input.name],onChange:onChange}),input.id);})}),/*#__PURE__*/_jsxs(\"span\",{className:\"agreement\",children:[\"By creating a account,I consent to the processing of my Personal data in accordance with the\",/*#__PURE__*/_jsx(\"b\",{children:\"PRIVACY POLICY\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"button\",children:\" Create\"})]})]})});};","map":{"version":3,"sources":["D:/js/resturent/connect/spoffy/src/pages/register/Register.jsx"],"names":["useState","useHistory","publicRequest","FormInput","Register","history","username","email","birthday","password","confirmPassword","values","setValues","inputs","id","name","type","placeholder","errorMessage","label","pattern","required","handleClick","e","preventDefault","console","log","post","push","onChange","target","value","map","input"],"mappings":"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","sourcesContent":["import \"./register.css\"\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { publicRequest } from \"../../requestMethod\";\r\nimport FormInput from \"./FormInput\";\r\n\r\nexport const Register = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [values, setValues] = useState({\r\n        username: \"\",\r\n        email: \"\",\r\n        birthday: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n\r\n    const inputs = [\r\n        {\r\n            id: 1,\r\n            name: \"username\",\r\n            type: \"text\",\r\n            placeholder: \"Username\",\r\n            errorMessage:\r\n                \"Username should be 3-16 characters and shouldn't include any special character!\",\r\n            label: \"Username\",\r\n            pattern: \"^[A-Za-z0-9]{3,16}$\",\r\n            required: true,\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"email\",\r\n            type: \"email\",\r\n            placeholder: \"Email\",\r\n            errorMessage: \"It should be a valid email address!\",\r\n            label: \"Email\",\r\n            required: true,\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"birthday\",\r\n            type: \"date\",\r\n            placeholder: \"Birthday\",\r\n            label: \"Birthday\",\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"password\",\r\n            type: \"password\",\r\n            placeholder: \"Password\",\r\n            errorMessage:\r\n                \"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",\r\n            label: \"Password\",\r\n            pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\r\n            required: true,\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"confirmPassword\",\r\n            type: \"password\",\r\n            placeholder: \"Confirm Password\",\r\n            errorMessage: \"Passwords don't match!\",\r\n            label: \"Confirm Password\",\r\n            pattern: values.password,\r\n            required: true,\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            console.log(values);\r\n            await publicRequest.post(\"/auth/register\", values);\r\n            history.push(\"/login\");\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n\r\n        }\r\n    };\r\n    const onChange = (e) => {\r\n        setValues({ ...values, [e.target.name]: e.target.value });\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"wrapper\">\r\n                <span className=\"title\">Create a acoount</span>\r\n                <form className=\"form\" onSubmit={handleClick}>\r\n                    <div className=\"inputs\">\r\n                        {inputs.map((input) => (\r\n                            <FormInput\r\n                                key={input.id}\r\n                                {...input}\r\n                                value={values[input.name]}\r\n                                onChange={onChange}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n\r\n                    <span className=\"agreement\">By creating a account,I consent to the processing of my Personal data in accordance\r\n                        with the<b>PRIVACY POLICY</b>\r\n                    </span>\r\n                    <button type=\"submit\" className=\"button\"> Create</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}